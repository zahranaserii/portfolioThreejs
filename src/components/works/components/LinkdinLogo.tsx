/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 linkdinLogo.gltf --transform 
Files: linkdinLogo.gltf [39.26KB] > C:\Users\zn\Desktop\linkdinLogo\linkdinLogo-transformed.glb [22.4KB] (43%)
Author: arogeek (https://sketchfab.com/arogeek)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/linkdin-1097140768524bbf851b3bc6b98ebf7e
Title: LINKDIN
*/

import { useGLTF } from "@react-three/drei";
import React from "react";
import { GroupProps } from "react-three-fiber";
import {
  BufferGeometry,
  Material,
  NormalBufferAttributes,
  Object3D,
  Object3DEventMap,
} from "three";
interface ModelProps extends GroupProps {}
interface LinkdinLogoGLTFResult {
  nodes: {
    [key: string]: Object3D<Object3DEventMap> & {
      geometry: BufferGeometry<NormalBufferAttributes>;
    };
  };
  materials: {
    [key: string]: Material;
  };
}
const Model: React.FC<ModelProps> = (props) => {
  const { nodes, materials } = useGLTF(
    "/linkdinLogo-transformed.glb"
  ) as unknown as LinkdinLogoGLTFResult;

  // Function to change the color of a material
  const changeMaterialColor = (material: Material, color: string) => {
    if (material) {
      if ("emissive" in material) {
        (
          material as { emissive: { set: (color: string) => void } }
        ).emissive.set(color);
      }
    }
  };

  // Change the color of each material
  changeMaterialColor(materials["Material.002"], "#3947db"); // Change to red
  changeMaterialColor(materials["Material.003"], "#fff"); // Change to green
  changeMaterialColor(materials["Material"], "#fff"); // Change to blue
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.Cube_Material002_0.geometry}
        material={materials["Material.002"]}
        position={[0, 0.079, 0.181]}
        rotation={[0, 0, -Math.PI / 2]}
        scale={[-1.928, 1.928, 0.357]}
      />
      <mesh
        geometry={nodes.Plane_Material003_0.geometry}
        material={materials["Material.003"]}
        position={[-0.259, 0.105, 0.546]}
        rotation={[0, 0, -Math.PI / 2]}
        scale={[0.408, 0.408, 0.583]}
      />
      <mesh
        geometry={nodes.Cylinder_Material_0.geometry}
        material={materials.Material}
        position={[-0.391, 0.906, 0.732]}
        rotation={[0, 0, -Math.PI / 2]}
        scale={[0.229, 0.229, 0.108]}
      />
    </group>
  );
};
export default Model;
useGLTF.preload("/linkdinLogo-transformed.glb");
