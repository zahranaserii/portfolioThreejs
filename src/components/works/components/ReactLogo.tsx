/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 reactLogo.gltf --transform 
Files: reactLogo.gltf [124.21KB] > C:\Users\zn\Desktop\reactLogo\reactLogo-transformed.glb [43.48KB] (65%)
Author: xenadus (https://sketchfab.com/xenadus)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/react-logo-76174ceeba96487f9863f974636f641e
Title: React logo
*/
import { useGLTF } from "@react-three/drei";
import React from "react";
import { GroupProps } from "react-three-fiber";
import {
  BufferGeometry,
  Material,
  NormalBufferAttributes,
  Object3D,
  Object3DEventMap,
} from "three";

interface ModelProps extends GroupProps {}
interface ReactLogoGLTFResult {
  nodes: {
    [key: string]: Object3D<Object3DEventMap> & {
      geometry: BufferGeometry<NormalBufferAttributes>;
    };
  };
  materials: {
    [key: string]: Material;
  };
}
const Model: React.FC<ModelProps> = (props) => {
  const { nodes, materials } = useGLTF(
    "/reactLogo-transformed.glb"
  ) as unknown as ReactLogoGLTFResult;
  const changeMaterialColor = (material: Material, color: string) => {
    if (material) {
      if ("emissive" in material) {
        (
          material as { emissive: { set: (color: string) => void } }
        ).emissive.set(color);
      }
    }
  };
  // Change the color of each material
  changeMaterialColor(materials["Material.002"], "#3394cc");
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={
          (
            nodes[
              "React-Logo_Material002_0"
            ] as ReactLogoGLTFResult["nodes"][string]
          ).geometry
        }
        material={materials["Material.002"]}
        position={[0, 0.079, 0.181]}
        rotation={[0, 0, -Math.PI / 2]}
        scale={[0.392, 0.392, 0.527]}
      />
    </group>
  );
};

export default Model;
